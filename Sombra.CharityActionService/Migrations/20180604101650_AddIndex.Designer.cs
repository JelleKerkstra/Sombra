// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Sombra.CharityActionService.DAL;

namespace Sombra.CharityActionService.Migrations
{
    [DbContext(typeof(CharityActionContext))]
    [Migration("20180604101650_AddIndex")]
    partial class AddIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sombra.CharityActionService.DAL.CharityAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActionEndDateTime");

                    b.Property<int>("Category");

                    b.Property<Guid>("CharityActionKey");

                    b.Property<Guid>("CharityKey");

                    b.Property<string>("CharityName");

                    b.Property<decimal>("CollectedAmount");

                    b.Property<string>("CoverImage");

                    b.Property<string>("Description");

                    b.Property<string>("IBAN");

                    b.Property<bool>("IsApproved");

                    b.Property<string>("Name");

                    b.Property<string>("OrganiserImage");

                    b.Property<Guid>("OrganiserUserKey");

                    b.Property<string>("OrganiserUserName");

                    b.Property<decimal>("TargetAmount");

                    b.HasKey("Id");

                    b.HasIndex("CharityActionKey");

                    b.ToTable("CharityActions");
                });

            modelBuilder.Entity("Sombra.CharityActionService.DAL.UserKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CharityActionId");

                    b.Property<Guid>("Key");

                    b.HasKey("Id");

                    b.HasIndex("CharityActionId");

                    b.ToTable("UserKeys");
                });

            modelBuilder.Entity("Sombra.CharityActionService.DAL.UserKey", b =>
                {
                    b.HasOne("Sombra.CharityActionService.DAL.CharityAction", "CharityAction")
                        .WithMany("UserKeys")
                        .HasForeignKey("CharityActionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
